// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_weather_app/test/features/weather/presentation/bloc/weather_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i4;
import 'package:flutter_weather_app/core/domain/entities/weather.dart' as _i5;
import 'package:flutter_weather_app/core/domain/usecases/get_weather_usecase.dart' as _i6;
import 'package:flutter_weather_app/core/errors/failures.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class


/// A class which mocks [GetWeatherUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherUseCase extends _i1.Mock implements _i6.GetWeatherUseCase {
  MockGetWeatherUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Future<_i4.Either<_i7.Failure, _i5.Weather>> call(String? cityName, String? lang) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [cityName, lang],
        ),
        returnValue: _i3.Future<_i4.Either<_i7.Failure, _i5.Weather>>.value(_i4.Right<_i7.Failure, _i5.Weather>(_i5.Weather(
          cityName: '',
          temperature: 0.0,
          description: '',
          icon: '',
          feelsLike: 0.0,
          humidity: 0,
          windSpeed: 0.0,
          dateTime: DateTime(2023),
        ))),
      ) as _i3.Future<_i4.Either<_i7.Failure, _i5.Weather>>);
}